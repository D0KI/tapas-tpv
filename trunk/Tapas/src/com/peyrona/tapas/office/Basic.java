/*
 * Copyright (C) 2010 Francisco José Morero Peyrona. All Rights Reserved.
 *
 * This file is part of Tapas project: http://code.google.com/p/tapas-tpv/
 *
 * GNU Classpath is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License as published by the free
 * Software Foundation; either version 3, or (at your option) any later version.
 *
 * Tapas is distributed in the hope that it will be useful, but WITHOUT ANY
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR
 * A PARTICULAR PURPOSE.  See the GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with
 * Tapas; see the file COPYING.  If not, write to the Free Software Foundation,
 * Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
 */

package com.peyrona.tapas.office;

import com.peyrona.tapas.persistence.Configuration;
import com.peyrona.tapas.persistence.DataProvider;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

/**
 *
 * @author peyrona
 */

// En lugar de traer de la instancia de Configuration de la DB y guardarla
// en esta clase, hay que traerla de la DB dos veces: al inicializar los
// componentes y al cerrar la dialog, si no se hace así, podrían solaparse
// las modificaciones hechas en este tab con las hechas en el tab "Ticket".
class Basic extends javax.swing.JPanel implements ActionListener
{
    /** Creates new form Basic */
    Basic()
    {
        initComponents();

        Configuration config = DataProvider.getInstance().getConfiguration();

        txtEmail.setText( config.getEmail() );
        txtPassword.setText( config.getPassword() );
        chkFullScreen.setSelected( config.isFullScreenSelected() );
        chkAutoAlign.setSelected( config.isAutoAlignSelected() );
    }

    //------------------------------------------------------------------------//

    // Este método es llamado cuando se va a cerrar la dialog
    @Override
    public void actionPerformed( ActionEvent e )
    {
        boolean bFullScr   = chkFullScreen.isSelected();
        boolean bAutoAlign = chkAutoAlign.isSelected();
        String  sPassword  = txtPassword.getText();
        char[]  acPassword = null;
        String  sEmail     = txtEmail.getText();

        if( sPassword.trim().length() == 0 )
            sPassword = null;
        else
            acPassword = sPassword.trim().toCharArray();

        if( sEmail.trim().length() == 0 )
            sEmail = null;
        else
            sEmail = sEmail.trim();

        // Vuelvo a traerme una instancia nueva de Configuration en base a la inf.
        // existente en la DB. De este modo garantiza que no se preserven los
        // cambios que el tab "Ticket" haya podido hacer en sus datos.
        // (Así, graba el tab quen grabe primero en la DB no importa).
        // Es un poco bestia, pero sigue el principio de la encapsulación de la POO
        // (ya que la otra opción sería compartir con "Basic" una misma instancia
        // de Configurtation).
        Configuration config = DataProvider.getInstance().getConfiguration();
                      config.setEmail( sEmail );
                      config.setPassword( acPassword );
                      config.setFullScreenMode( bFullScr );
                      config.setAutoAlignMode( bAutoAlign );

        ////DataProvider.getDataSource().setConfiguration( config );
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblPassword = new javax.swing.JLabel();
        txtPassword = new javax.swing.JTextField();
        chkFullScreen = new javax.swing.JCheckBox();
        lblEmail = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        chkAutoAlign = new javax.swing.JCheckBox();

        lblPassword.setText("Contraseña administrativa");

        chkFullScreen.setText("Utilizar toda la pantalla para la aplicación");

        lblEmail.setText("email (enviar diario de caja)");

        chkAutoAlign.setText("Alinear automáticamente las cuentas");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chkAutoAlign)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblEmail)
                            .addComponent(lblPassword))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtEmail, javax.swing.GroupLayout.DEFAULT_SIZE, 187, Short.MAX_VALUE)
                            .addComponent(txtPassword, javax.swing.GroupLayout.DEFAULT_SIZE, 187, Short.MAX_VALUE)))
                    .addComponent(chkFullScreen))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPassword)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEmail)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(chkFullScreen)
                .addGap(18, 18, 18)
                .addComponent(chkAutoAlign)
                .addContainerGap(135, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox chkAutoAlign;
    private javax.swing.JCheckBox chkFullScreen;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtPassword;
    // End of variables declaration//GEN-END:variables
}